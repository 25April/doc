//《数据结构（Java版）（第4版）》，作者：叶核亚，2015年8月24日
//8.2 二分法查找    
//对排序数组进行二分法查找，确定二叉判定树

public class BinarySearch_图8_1 
{
    public static void main(String[] args)
    {
        int values[]={8,17,26,32,40,72,87,99}, key=39;     //图8.1，按升序排序
        BinaryDecisionSearch.print(values); 
        System.out.print("二分法查找 "+key+"，");
        System.out.println(((SortedArray.binarySearch(values,key)==-1)?"不":"")+"成功");
    }
}
/* 
程序运行结果如下，Integer数组（教材写）与int数组（递归算法）结果相同。
排序关键字序列（升序）: {8, 17, 26, 32, 40, 72, 87, 99}，8个元素     //图8.1，二叉判定树正确
二分法查找 8，[3]=32？[1]=17？[0]=8？ 成功
二分法查找 17，[3]=32？[1]=17？ 成功
二分法查找 26，[3]=32？[1]=17？[2]=26？ 成功
二分法查找 32，[3]=32？ 成功
二分法查找 40，[3]=32？[5]=72？[4]=40？ 成功
二分法查找 72，[3]=32？[5]=72？ 成功
二分法查找 87，[3]=32？[5]=72？[6]=87？ 成功
二分法查找 99，[3]=32？[5]=72？[6]=87？[7]=99？ 成功
ASL成功=(1×1+2×2+3×4+4×1)/8 = 21/8 = 2.625
二分法查找 39，[3]=32？[5]=72？[4]=40？不成功

*/
//@author：Yeheya。2015-8-24


