//《数据结构（Java版）（第4版）》，作者：叶核亚，2014年8月27日
//10.3   算法设计策略
//10.3.3   贪心法
//4.  最小/大堆
//【思考题10-6】堆排序。用于测试堆是否正确

public class HeapSort
{    
    //数组堆排序，asc取值true（升序）、false（降序）。使用最小堆对象，空间复杂度为O(n)
    public static void heapsort(Integer[] value, boolean asc)
    {
        System.out.print("关键字序列: ");  Array1.print(value); //见例1.4
        Heap<Integer> heap = new Heap<Integer>(asc, value, null); //堆
//        System.out.println("最"+(asc ? "小":"大")+"堆："+heap.toString());
        for (int i=0; !heap.isEmpty(); i++)
            value[i]=heap.removeRoot();                    //返回根元素（最小/大值），删除根元素并调整为最小/大堆
        System.out.print("堆排序（"+(asc ? "升":"降")+"序）：");
        Array1.print(value);
        System.out.println();
    }
    public static void main(String args[])
    {
        String[] str={"教材图10.11", "教材图9.10", "教材图9.9", "习题解答习9-10", "随机数"};
        Integer valuerandom[] = Array1.randomInteger(9,100);  //见例1.4
        Integer[][] values={{5,31,11,49,90,99,47,87,16},   //图10.11，最小堆插入和删除测试；【思考题10-6】②最大堆
                      		{81,49,19,38,97,76,13,19},     //教材图9.10，有相同关键字元素；【思考题10-6】 ①最小堆
        		            {81,49,19,38,97,76,13,27},     //教材图9.9            
        		            {29,10,25,26,58,12,31,18,47},  //习题解答习9-10
                            valuerandom};
        for (int i=0; i<str.length; i++)
        {
    	    System.out.print(str[i]+"，");
    	    Integer[] ascvalue = new Integer[values[i].length];
    	    System.arraycopy(values[i], 0, ascvalue, 0, values[i].length);
            heapsort(ascvalue, true);                      //升序，最小堆
            heapsort(values[i], false);                    //降序，最大堆
            System.out.println();
        }
    }
}
/*
程序运行结果如下。
教材图10.11，关键字序列:  5 31 11 49 90 99 47 87 16                 //图10.11，最小堆插入和删除测试；
插入5，最小堆：SeqList(5) 
插入31，最小堆：SeqList(5, 31) 
插入11，最小堆：SeqList(5, 31, 11) 
插入49，最小堆：SeqList(5, 31, 11, 49) 
插入90，最小堆：SeqList(5, 31, 11, 49, 90) 
插入99，最小堆：SeqList(5, 31, 11, 49, 90, 99) 
插入47，最小堆：SeqList(5, 31, 11, 49, 90, 99, 47) 
插入87，最小堆：SeqList(5, 31, 11, 49, 90, 99, 47, 87)
插入16，最小堆：SeqList(5, 16, 11, 31, 90, 99, 47, 87, 49)        //教材图10.11（b），插入16
删除5，最小堆：SeqList(11, 16, 47, 31, 90, 99, 49, 87)            //教材图10.12（b）
删除11，最小堆：SeqList(16, 31, 47, 87, 90, 99, 49)               //【思考题10-6】③
删除16，最小堆：SeqList(31, 49, 47, 87, 90, 99) 
删除31，最小堆：SeqList(47, 49, 99, 87, 90) 
删除47，最小堆：SeqList(49, 87, 99, 90) 
删除49，最小堆：SeqList(87, 90, 99) 
删除87，最小堆：SeqList(90, 99) 
删除90，最小堆：SeqList(99) 
删除99，最小堆：SeqList() 
堆排序（升序）： 5 11 16 31 47 49 87 90 99


关键字序列:  5 31 11 49 90 99 47 87 16
最大堆：SeqList(5) 
最大堆：SeqList(31, 5) 
最大堆：SeqList(31, 5, 11) 
最大堆：SeqList(49, 31, 11, 5) 
最大堆：SeqList(90, 49, 11, 5, 31) 
最大堆：SeqList(99, 49, 90, 5, 31, 11) 
最大堆：SeqList(99, 49, 90, 5, 31, 11, 47) 
最大堆：SeqList(99, 87, 90, 49, 31, 11, 47, 5) 
最大堆：SeqList(99, 87, 90, 49, 31, 11, 47, 5, 16)              //【思考题10-6】②最大堆
堆排序（降序）： 99 90 87 49 47 31 16 11 5


教材图9.10，关键字序列:  81 49 19 38 97 76 13 19                    //【思考题10-6】 ① 最小堆
最小堆：SeqList(81) 
最小堆：SeqList(49, 81) 
最小堆：SeqList(19, 81, 49) 
最小堆：SeqList(19, 38, 49, 81) 
最小堆：SeqList(19, 38, 49, 81, 97) 
最小堆：SeqList(19, 38, 49, 81, 97, 76) 
最小堆：SeqList(13, 38, 19, 81, 97, 76, 49) 
最小堆：SeqList(13, 19, 19, 38, 97, 76, 49, 81)                //算法正确，画图，结果的最后两个元素次序与教材图9.10不同
堆排序（升序）： 13 19 19 38 49 76 81 97

关键字序列:  81 49 19 38 97 76 13 19
最大堆：SeqList(81) 
最大堆：SeqList(81, 49) 
最大堆：SeqList(81, 49, 19) 
最大堆：SeqList(81, 49, 19, 38) 
最大堆：SeqList(97, 81, 19, 38, 49) 
最大堆：SeqList(97, 81, 76, 38, 49, 19) 
最大堆：SeqList(97, 81, 76, 38, 49, 19, 13) 
最大堆：SeqList(97, 81, 76, 38, 49, 19, 13, 19) 
堆排序（降序）： 97 81 76 49 38 19 19 13


教材图9.9，关键字序列:  81 49 19 38 97 76 13 27
最小堆：SeqList(81) 
最小堆：SeqList(49, 81) 
最小堆：SeqList(19, 81, 49) 
最小堆：SeqList(19, 38, 49, 81) 
最小堆：SeqList(19, 38, 49, 81, 97) 
最小堆：SeqList(19, 38, 49, 81, 97, 76) 
最小堆：SeqList(13, 38, 19, 81, 97, 76, 49) 
最小堆：SeqList(13, 27, 19, 38, 97, 76, 49, 81)                //算法正确，画图，结果的最后两个元素次序与教材图9.9（a）不同
堆排序（升序）： 13 19 27 38 49 76 81 97

关键字序列:  81 49 19 38 97 76 13 27
最大堆：SeqList(81) 
最大堆：SeqList(81, 49) 
最大堆：SeqList(81, 49, 19) 
最大堆：SeqList(81, 49, 19, 38) 
最大堆：SeqList(97, 81, 19, 38, 49) 
最大堆：SeqList(97, 81, 76, 38, 49, 19) 
最大堆：SeqList(97, 81, 76, 38, 49, 19, 13) 
最大堆：SeqList(97, 81, 76, 38, 49, 19, 13, 27)                 //算法正确，画图，结果同教材图9.9（b）
堆排序（降序）： 97 81 76 49 38 27 19 13


习题解答习9-10，关键字序列:  29 10 25 26 58 12 31 18 47
最小堆：SeqList(29) 
最小堆：SeqList(10, 29) 
最小堆：SeqList(10, 29, 25) 
最小堆：SeqList(10, 26, 25, 29) 
最小堆：SeqList(10, 26, 25, 29, 58) 
最小堆：SeqList(10, 26, 12, 29, 58, 25) 
最小堆：SeqList(10, 26, 12, 29, 58, 25, 31) 
最小堆：SeqList(10, 18, 12, 26, 58, 25, 31, 29) 
最小堆：SeqList(10, 18, 12, 26, 58, 25, 31, 29, 47)            //算法正确，画图，结果同习图9-10（b）
堆排序（升序）： 10 12 18 25 26 29 31 47 58

关键字序列:  29 10 25 26 58 12 31 18 47
最大堆：SeqList(29) 
最大堆：SeqList(29, 10) 
最大堆：SeqList(29, 10, 25) 
最大堆：SeqList(29, 26, 25, 10) 
最大堆：SeqList(58, 29, 25, 10, 26) 
最大堆：SeqList(58, 29, 25, 10, 26, 12) 
最大堆：SeqList(58, 29, 31, 10, 26, 12, 25) 
最大堆：SeqList(58, 29, 31, 18, 26, 12, 25, 10) 
最大堆：SeqList(58, 47, 31, 29, 26, 12, 25, 10, 18)            //算法正确，画图，结果与习图9-10（a）不同
堆排序（降序）： 58 47 31 29 26 25 18 12 10



随机数，关键字序列:  89 86 62 4 57 91 17 58 43
最小堆：SeqList(89) 
最小堆：SeqList(86, 89) 
最小堆：SeqList(62, 89, 86) 
最小堆：SeqList(4, 62, 86, 89) 
最小堆：SeqList(4, 57, 86, 89, 62) 
最小堆：SeqList(4, 57, 86, 89, 62, 91) 
最小堆：SeqList(4, 57, 17, 89, 62, 91, 86) 
最小堆：SeqList(4, 57, 17, 58, 62, 91, 86, 89) 
最小堆：SeqList(4, 43, 17, 57, 62, 91, 86, 89, 58) 
堆排序（升序）： 4 17 43 57 58 62 86 89 91

关键字序列:  89 86 62 4 57 91 17 58 43
最大堆：SeqList(89) 
最大堆：SeqList(89, 86) 
最大堆：SeqList(89, 86, 62) 
最大堆：SeqList(89, 86, 62, 4) 
最大堆：SeqList(89, 86, 62, 4, 57) 
最大堆：SeqList(91, 86, 89, 4, 57, 62) 
最大堆：SeqList(91, 86, 89, 4, 57, 62, 17) 
最大堆：SeqList(91, 86, 89, 58, 57, 62, 17, 4) 
最大堆：SeqList(91, 86, 89, 58, 57, 62, 17, 4, 43) 
堆排序（降序）： 91 89 86 62 58 57 43 17 4




*/
//@author：Yeheya。2015-4-13
